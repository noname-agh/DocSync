<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	 xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	 xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://jax-ws.dev.java.net/spring/core
		http://jax-ws.dev.java.net/spring/core.xsd
		http://jax-ws.dev.java.net/spring/servlet
		http://jax-ws.dev.java.net/spring/servlet.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- Used for EntityManager injection (@PersistenceContext) -->
	
	<context:component-scan base-package="pl.edu.agh.two.ws.server" />
	<context:annotation-config/>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="serverUnit"/>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<bean id="cloudFileDAO" class="pl.edu.agh.two.ws.dao.CloudFileDAOImpl"/>
	<bean id="rssChannelDAO" class="pl.edu.agh.two.ws.dao.RSSChannelDAOImpl"/>
	<bean id="rssItemDAO" class="pl.edu.agh.two.ws.dao.RSSItemDAOImpl"/>
	<bean id="rssReader" class="pl.edu.agh.two.ws.server.RSSReader">
		<constructor-arg ref="rssChannelDAOTX"/>
		<constructor-arg ref="rssItemDAOTX"/>
	</bean>
	<bean id="cloudStorage" class="pl.edu.agh.two.ws.server.CloudStorageImpl">
		<constructor-arg ref="cloudFileDAOTX"/>
		<constructor-arg ref="rssReader"/>
	</bean>
	
	<!-- Enforce @Transaction annotations -->
	
	<bean id="baseTX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="cloudFileDAOTX" parent="baseTX">
		<property name="target" ref="cloudFileDAO"/>
	</bean>
	<bean id="rssItemDAOTX" parent="baseTX">
		<property name="target" ref="rssItemDAO"/>
	</bean>
	<bean id="rssChannelDAOTX" parent="baseTX">
		<property name="target" ref="rssChannelDAO"/>
	</bean>
	
	<!-- Exspose cloud storage web service, make sure WSSpringServlet is also mapped to this url -->
	
    <wss:binding url="/CloudStorage">
        <wss:service>
            <ws:service bean="#cloudStorage" impl="pl.edu.agh.two.ws.server.CloudStorageImpl"/>
        </wss:service>
    </wss:binding>
	
	
	<!-- Periodically refresh RSS -->
	
	<bean id="rssCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="refreshRSSJob" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>
	
	<bean id="refreshRSSJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="rssReader" />
		<property name="targetMethod" value="updateAll" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list><ref bean="refreshRSSJob" /></list>
		</property>
		<property name="triggers">
			<list><ref bean="rssCronTrigger" /></list>
		</property>
	</bean>
	
</beans>